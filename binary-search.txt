Binary Search Example:

Write a function called binarySearch which accepts a sorted array and a value and returns the index at which the value exists. Otherwise return -1.

function binarySearch(arr, val) {
  let left = 0;
  let right = arr.length - 1;
  let middle = Math.floor((left + right) / 2);
  while (arr[middle] !== val && left <= right) {
    if(val < arr[middle]) {
      right = middle - 1
    } else {
      left = middle + 1;
    }
    middle = Math.floor((left + right) / 2);
  }
    if (arr[middle] === val) {
      return middle;
    } else {

  return -1;
    }
}

Naive String Approach:

function stringSearch(longStr, str) {
  let counter = 0;
  for (let i = 0; i < longStr.length; i++) {
    for (let j = 0; j < str.length; j++) {
      if (str[j] !== longStr[i+j]) break;
      if(j === str.length - 1) counter++;
    }
  }
  return counter;
}